<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Bear</title>
  
  
  <link href="https://bearwater.gitee.io/hexo/atom.xml" rel="self"/>
  
  <link href="https://bearwater.gitee.io/hexo/"/>
  <updated>2021-02-01T13:44:56.048Z</updated>
  <id>https://bearwater.gitee.io/hexo/</id>
  
  <author>
    <name>Bear</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【LeetCode】888. 公平的糖果棒交换</title>
    <link href="https://bearwater.gitee.io/hexo/2021/02/01/%E3%80%90LeetCode%E3%80%91888.%20%E5%85%AC%E5%B9%B3%E7%9A%84%E7%B3%96%E6%9E%9C%E6%A3%92%E4%BA%A4%E6%8D%A2/"/>
    <id>https://bearwater.gitee.io/hexo/2021/02/01/%E3%80%90LeetCode%E3%80%91888.%20%E5%85%AC%E5%B9%B3%E7%9A%84%E7%B3%96%E6%9E%9C%E6%A3%92%E4%BA%A4%E6%8D%A2/</id>
    <published>2021-02-01T11:44:36.751Z</published>
    <updated>2021-02-01T13:44:56.048Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>爱丽丝和鲍勃有不同大小的糖果棒：A[i] 是爱丽丝拥有的第 i 根糖果棒的大小，B[j] 是鲍勃拥有的第 j 根糖果棒的大小。</p><p>因为他们是朋友，所以他们想交换一根糖果棒，这样交换后，他们都有相同的糖果总量。（一个人拥有的糖果总量是他们拥有的糖果棒大小的总和。）</p><p>返回一个整数数组 ans，其中 ans[0] 是爱丽丝必须交换的糖果棒的大小，ans[1] 是 Bob 必须交换的糖果棒的大小。</p><p>如果有多个答案，你可以返回其中任何一个。保证答案存在。</p><h3 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例1</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：A &#x3D; [1,1], B &#x3D; [2,2]</span><br><span class="line">输出：[1,2]</span><br></pre></td></tr></table></figure><h3 id="示例2"><a href="#示例2" class="headerlink" title="示例2"></a>示例2</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：A &#x3D; [1,2], B &#x3D; [2,3]</span><br><span class="line">输出：[1,2]</span><br></pre></td></tr></table></figure><h3 id="示例3"><a href="#示例3" class="headerlink" title="示例3"></a>示例3</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：A &#x3D; [2], B &#x3D; [1,3]</span><br><span class="line">输出：[2,3]</span><br></pre></td></tr></table></figure><h3 id="示例4"><a href="#示例4" class="headerlink" title="示例4"></a>示例4</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：A &#x3D; [1,2,5], B &#x3D; [2,4]</span><br><span class="line">输出：[5,4]</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><p>​    1 &lt;= A.length &lt;= 10000<br>​    1 &lt;= B.length &lt;= 10000<br>​    1 &lt;= A[i] &lt;= 100000<br>​    1 &lt;= B[i] &lt;= 100000<br>​    保证爱丽丝与鲍勃的糖果总量不同。<br>​    答案肯定存在。</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/fair-candy-swap">https://leetcode-cn.com/problems/fair-candy-swap</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h2 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h2><p>得到A集合和B集合的总值，然后相减得到差值sub(可能是负数)。</p><p>要使得A B两集合总和相等，则A集合需要增加/减少 sub/2，同样的B集合需要减少/增加 sub/2。</p><p>假定A交换值为a,B为b,当A B两集合交换时 A集合总和增加了a-b(可能是负数)</p><p>所以得出 sub/2 = a-b;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] fairCandySwap(<span class="keyword">int</span>[] A, <span class="keyword">int</span>[] B) &#123;</span><br><span class="line">        <span class="comment">//记录差值</span></span><br><span class="line">        <span class="keyword">int</span> sub = <span class="number">0</span>;</span><br><span class="line">        Set&lt;Integer&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        <span class="comment">//遍历A数组 计算A数组的总和 存放A集合的值 用于后续获取</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : A) &#123;</span><br><span class="line">            sub+=i;</span><br><span class="line">            set.add(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//遍历B数组 计算B数组和A数组的差值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : B) &#123;</span><br><span class="line">            sub-=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//得到实际差值</span></span><br><span class="line">        sub=sub/<span class="number">2</span>;</span><br><span class="line">        <span class="comment">//由于题目说了必定有答案 所以可以通过反推来得到另一个的值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : B) &#123;</span><br><span class="line">            <span class="comment">//得到反推算后的值</span></span><br><span class="line">            <span class="keyword">int</span> temp = sub+i;</span><br><span class="line">            <span class="comment">//存在即返回</span></span><br><span class="line">            <span class="keyword">if</span>(set.contains(temp))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;temp,i&#125;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;题目描述：&quot;&gt;&lt;a href=&quot;#题目描述：&quot; class=&quot;headerlink&quot; title=&quot;题目描述：&quot;&gt;&lt;/a&gt;题目描述：&lt;/h2&gt;&lt;p&gt;爱丽丝和鲍勃有不同大小的糖果棒：A[i] 是爱丽丝拥有的第 i 根糖果棒的大小，B[j] 是鲍勃拥有的第 j 根糖果</summary>
      
    
    
    
    <category term="LeetCode" scheme="https://bearwater.gitee.io/hexo/categories/LeetCode/"/>
    
    
    <category term="数组" scheme="https://bearwater.gitee.io/hexo/tags/%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>基于Hexo搭建个人博客</title>
    <link href="https://bearwater.gitee.io/hexo/2021/01/30/%E5%9F%BA%E4%BA%8EHexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://bearwater.gitee.io/hexo/2021/01/30/%E5%9F%BA%E4%BA%8EHexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2021-01-30T08:12:16.988Z</published>
    <updated>2021-02-01T13:41:30.153Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1.安装Git"></a>1.安装Git</h2><p>拉取蝴蝶模板要用到Git，先装好Git。</p><p>下载地址： <a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a> 无脑下一步然后安装即可，装完后右键可以看到这两选项就是安装成功了</p><p><img src= "/hexo/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/30/ykm4e0.png" alt="image-20210130145430774"></p><h2 id="2-安装Node-js"><a href="#2-安装Node-js" class="headerlink" title="2.安装Node.js"></a>2.安装Node.js</h2><p>Hexo框架是基于node.js生成的，所以安装Hexo之前要先装一下node.js</p><p>下载地址：<a href="http://nodejs.cn/download/">http://nodejs.cn/download/</a> ，对照系统安装即可（无脑下一步），安装后配置下环境变量PATH（路径改成自己nodejs里面的）。</p><p><img src= "/hexo/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/30/ykmqSJ.png" alt="image-20210130143024167"></p><p>配完后命令行输入 node -v 和 npm -v 看到版本号就是安装成功了。</p><p><img src= "/hexo/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/30/ykmWyn.png" alt="image-20210130141322172"></p><h2 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3.安装Hexo"></a>3.安装Hexo</h2><p>新建一个文件夹blog，然后进入该文件所在的命令行，安装hexo依赖包。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>装完后输入hexo -v 看到版本号就表示安装成功了。</p><p><img src= "/hexo/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/30/ykm7YF.png" alt="image-20210130150218603"></p><p>成功后初输入以下命令始化hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init hexo</span><br></pre></td></tr></table></figure><p>初始化后进入hexo文件夹可以看到以下目录，这里我们只关心source这个文件夹 后续博客生成后都会放在这里<img src= "/hexo/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/30/ykmLl9.png" alt="image-20210130150844608"></p><p>之后输入以下两条命令生成页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p><img src= "/hexo/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/30/ykn3Xn.png" alt="image-20210130151747973"></p><p>然后进到 <a href="http://localhost:4000/">http://localhost:4000/</a>   看到以下页面就可以了</p><p><img src= "/hexo/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/30/ykn676.png" alt="image-20210130152543489"></p><p>后续要写博客,可以在打开一个到hexo目录下的命令行然后输入以下命令（xxx是文件名）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new xxx</span><br></pre></td></tr></table></figure><p>就可以到hexo\source\_posts看到生成 xxx.md文件（hello-world.md是默认自带的）</p><p><img src= "/hexo/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/30/yknahF.png" alt="image-20210130152315844"></p><p>生成完后回到页面就能看到刚刚生成的页面了</p><p><img src= "/hexo/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/30/yknbAf.png" alt="image-20210130152543489"></p><h2 id="4-主题安装"><a href="#4-主题安装" class="headerlink" title="4.主题安装"></a>4.主题安装</h2><p>这里我推荐一款我自己在用的hexo主题Butterfly</p><p>在hexo目录下打开命令行，输入以下命令拉取Butterfly主题文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b master https:&#x2F;&#x2F;github.com&#x2F;jerryc127&#x2F;hexo-theme-butterfly.git themes&#x2F;butterfly</span><br></pre></td></tr></table></figure><p><img src= "/hexo/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/30/yku3CD.png" alt="image-20210130153051496"></p><p>修改_config.yml里面的配置，找到theme将主题指定为butterfly</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br></pre></td></tr></table></figure><p>然后在安装一个pug以及styles的依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p>装完后重新运行 hexo g，hexo s命令 然后刷新一下就可以看到装好后的主题了</p><p><img src= "/hexo/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/30/ykudVP.png" alt="image-20210130153729742"></p><p>后续相应的配置更改可以看下 Butterfly 的教程  <a href="https://butterfly.js.org/posts/4aa8abbe/">https://butterfly.js.org/posts/4aa8abbe/</a></p><h2 id="5-发布到Gitee"><a href="#5-发布到Gitee" class="headerlink" title="5.发布到Gitee"></a>5.发布到Gitee</h2><p>没有账号的话，先到 <a href="https://gitee.com/">https://gitee.com/</a> 上申请注册账号。</p><p>注册往后创建一个个人仓库路径和仓库名称随意</p><p><a href="https://imgchr.com/i/ye6BnS"><img src= "/hexo/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/02/01/ye6BnS.png" alt="ye6BnS.png"></a></p><p>填写后直接创建即可。然后回到个人主页找到刚刚创建的仓库，将仓库地址复制下来</p><p><a href="https://imgchr.com/i/yecwCR"><img src= "/hexo/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/02/01/yecwCR.png" alt="yecwCR.png"></a></p><p>然后回到hexo根目录 ，找到_config.yml文件，在底下配置gitee地址</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 把刚刚复制的地址粘贴到repo这里</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://gitee.com/xxxx/hexo.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>打开命令行，安装自动部署工具，装完后重新发布（要输入gitee账号和密码）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save </span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure><p>回到仓库就可以看到生成的静态文件了。</p><p><a href="https://imgchr.com/i/yegdeS"><img src= "/hexo/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/02/01/yegdeS.png" alt="yegdeS.png"></a></p><p>接下来在项目的服务中选择Pages选项,部署pages时需要绑定手机号码. 点击启动.</p><p><a href="https://imgchr.com/i/ye2iOf"><img src= "/hexo/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/02/01/ye2iOf.png" alt="ye2iOf.png"></a></p><p>启动完后就可以访问上图的网站地址，这时候看到的页面可能格式是乱的，回到hexo根目录，找到_config.yml文件，找到url，将网站的粘贴到那，然后root指定仓库路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url: https:&#x2F;&#x2F;xxx.gitee.io&#x2F;hexo</span><br><span class="line">root: &#x2F;hexo</span><br></pre></td></tr></table></figure><p>之后命令行重新发布,然后回到页面点一下更新，然后访问下网站地址就可以看到样式了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure><p><a href="https://imgchr.com/i/yeRuUe"><img src= "/hexo/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/02/01/yeRuUe.png" alt="yeRuUe.png"></a></p>]]></content>
    
    
    <summary type="html">Butterfly主题博客搭建</summary>
    
    
    
    <category term="Nodejs" scheme="https://bearwater.gitee.io/hexo/categories/Nodejs/"/>
    
    
    <category term="Hexo" scheme="https://bearwater.gitee.io/hexo/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Skywalking环境搭建与部署（Windows）</title>
    <link href="https://bearwater.gitee.io/hexo/2021/01/16/Skywalking%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%83%A8%E7%BD%B2/"/>
    <id>https://bearwater.gitee.io/hexo/2021/01/16/Skywalking%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%83%A8%E7%BD%B2/</id>
    <published>2021-01-16T11:40:21.973Z</published>
    <updated>2021-01-30T09:17:32.844Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-安装Skywalking"><a href="#1-安装Skywalking" class="headerlink" title="1. 安装Skywalking"></a>1. 安装Skywalking</h2><p>下载地址：<a href="http://skywalking.apache.org/downloads/">http://skywalking.apache.org/downloads/</a> ，下载后解压即可</p><h2 id="2-修改Skywalking端口"><a href="#2-修改Skywalking端口" class="headerlink" title="2. 修改Skywalking端口"></a>2. 修改Skywalking端口</h2><p>在此路径下更改对应的端口\apache-skywalking-apm-bin\webapp\webapp.yml，</p><p>更改完后启动bin目录下startup.bat即可访问skywalking客户端 <a href="http://localhost:9001/">http://localhost:9001/</a></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">port</span>: <span class="string">9001 </span></span><br><span class="line"></span><br><span class="line"><span class="attr">collector</span>:<span class="string"></span></span><br><span class="line">  <span class="attr">path</span>: <span class="string">/graphql</span></span><br><span class="line">  <span class="attr">ribbon</span>:<span class="string"></span></span><br><span class="line">    <span class="attr">ReadTimeout</span>: <span class="string">10000</span></span><br><span class="line"><span class="comment">    # Point to all backend&#x27;s restHost:restPort, split by ,</span></span><br><span class="line">    <span class="attr">listOfServers</span>: <span class="string">127.0.0.1:12800</span></span><br></pre></td></tr></table></figure><h2 id="3-安装ElasticSearch"><a href="#3-安装ElasticSearch" class="headerlink" title="3. 安装ElasticSearch"></a>3. 安装ElasticSearch</h2><p>官网下载es的zip安装包 <a href="https://elasticsearch.cn/download/">https://elasticsearch.cn/download/</a></p><p>解压后，修改confIg目录下 elasticsearch.yml文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 名称</span></span><br><span class="line"><span class="attr">cluster.name:</span> <span class="string">xxx</span></span><br><span class="line"><span class="comment"># 本机地址</span></span><br><span class="line"><span class="attr">network.host:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><p>然后进到bin目录下双击elasticsearch.bat启动即可，<a href="http://localhost:9200/">http://localhost:9200/</a> (默认地址)</p><h2 id="4-配置Agent"><a href="#4-配置Agent" class="headerlink" title="4. 配置Agent"></a>4. 配置Agent</h2><p>在此路径下\apache-skywalking-apm-bin\agent\config 修改服务名称为ElasticSearch中的cluster.name</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">agent.service_name&#x3D;$&#123;SW_AGENT_NAME:xxx&#125; </span><br></pre></td></tr></table></figure><h2 id="5-配置Skywalking"><a href="#5-配置Skywalking" class="headerlink" title="5. 配置Skywalking"></a>5. 配置Skywalking</h2><p>修改apache-skywalking-apm-bin\config路径下application.yml配置，将默认的H2更改为Elasticsearch</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">storage:</span></span><br><span class="line">  <span class="attr">selector:</span> <span class="string">$&#123;SW_STORAGE:elasticsearch&#125;</span><span class="comment"># 指定使用Elasticsearch存储</span></span><br><span class="line">  <span class="attr">elasticsearch:</span></span><br><span class="line">    <span class="attr">nameSpace:</span> <span class="string">$&#123;SW_NAMESPACE:&quot;&quot;&#125;</span></span><br><span class="line">    <span class="attr">clusterNodes:</span> <span class="string">$&#123;SW_STORAGE_ES_CLUSTER_NODES:localhost:9200&#125;</span><span class="comment">#ES连接地址</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">$&#123;SW_STORAGE_ES_HTTP_PROTOCOL:&quot;http&quot;&#125;</span></span><br><span class="line">    <span class="attr">user:</span> <span class="string">$&#123;SW_ES_USER:&quot;&quot;&#125;</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">$&#123;SW_ES_PASSWORD:&quot;&quot;&#125;</span></span><br><span class="line">    <span class="attr">trustStorePath:</span> <span class="string">$&#123;SW_STORAGE_ES_SSL_JKS_PATH:&quot;&quot;&#125;</span></span><br><span class="line">    <span class="attr">trustStorePass:</span> <span class="string">$&#123;SW_STORAGE_ES_SSL_JKS_PASS:&quot;&quot;&#125;</span></span><br><span class="line">    <span class="attr">secretsManagementFile:</span> <span class="string">$&#123;SW_ES_SECRETS_MANAGEMENT_FILE:&quot;&quot;&#125;</span> </span><br><span class="line">    <span class="attr">dayStep:</span> <span class="string">$&#123;SW_STORAGE_DAY_STEP:1&#125;</span> </span><br><span class="line">    <span class="attr">indexShardsNumber:</span> <span class="string">$&#123;SW_STORAGE_ES_INDEX_SHARDS_NUMBER:1&#125;</span> </span><br><span class="line">    <span class="attr">indexReplicasNumber:</span> <span class="string">$&#123;SW_STORAGE_ES_INDEX_REPLICAS_NUMBER:1&#125;</span> </span><br><span class="line">    <span class="attr">superDatasetDayStep:</span> <span class="string">$&#123;SW_SUPERDATASET_STORAGE_DAY_STEP:-1&#125;</span> </span><br><span class="line">    <span class="attr">superDatasetIndexShardsFactor:</span> <span class="string">$&#123;SW_STORAGE_ES_SUPER_DATASET_INDEX_SHARDS_FACTOR:5&#125;</span> </span><br><span class="line">    <span class="attr">superDatasetIndexReplicasNumber:</span> <span class="string">$&#123;SW_STORAGE_ES_SUPER_DATASET_INDEX_REPLICAS_NUMBER:0&#125;</span> </span><br><span class="line">    <span class="attr">bulkActions:</span> <span class="string">$&#123;SW_STORAGE_ES_BULK_ACTIONS:1000&#125;</span> </span><br><span class="line">    <span class="attr">syncBulkActions:</span> <span class="string">$&#123;SW_STORAGE_ES_SYNC_BULK_ACTIONS:50000&#125;</span> </span><br><span class="line">    <span class="attr">flushInterval:</span> <span class="string">$&#123;SW_STORAGE_ES_FLUSH_INTERVAL:10&#125;</span> </span><br><span class="line">    <span class="attr">concurrentRequests:</span> <span class="string">$&#123;SW_STORAGE_ES_CONCURRENT_REQUESTS:2&#125;</span></span><br><span class="line">    <span class="attr">resultWindowMaxSize:</span> <span class="string">$&#123;SW_STORAGE_ES_QUERY_MAX_WINDOW_SIZE:10000&#125;</span></span><br><span class="line">    <span class="attr">metadataQueryMaxSize:</span> <span class="string">$&#123;SW_STORAGE_ES_QUERY_MAX_SIZE:5000&#125;</span></span><br><span class="line">    <span class="attr">segmentQueryMaxSize:</span> <span class="string">$&#123;SW_STORAGE_ES_QUERY_SEGMENT_SIZE:200&#125;</span></span><br><span class="line">    <span class="attr">profileTaskQueryMaxSize:</span> <span class="string">$&#123;SW_STORAGE_ES_QUERY_PROFILE_TASK_SIZE:200&#125;</span></span><br><span class="line">    <span class="attr">advanced:</span> <span class="string">$&#123;SW_STORAGE_ES_ADVANCED:&quot;&quot;&#125;</span></span><br></pre></td></tr></table></figure><h2 id="6-配置要追踪的服务"><a href="#6-配置要追踪的服务" class="headerlink" title="6. 配置要追踪的服务"></a>6. 配置要追踪的服务</h2><p><img src= "/hexo/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/16/srCiB6.png" alt="image-20210116193528926"></p><p><img src= "/hexo/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/16/srCEND.png" alt="image-20210116193600373"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-javaagent:D:\Development\apache-skywalking-apm-bin\agent\skywalking-agent.jar -Dskywalking.agent.service_name&#x3D;order_service -Dskywalking.collector.backend_service&#x3D;localhost:11800</span><br></pre></td></tr></table></figure><p>之后启动项目访问即可在 Skywalking中看到相应的日志记录</p><p><img src= "/hexo/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2021/01/16/srCV4e.png" alt="image-20210116193957039"></p>]]></content>
    
    
    <summary type="html">Windows环境下Skywalking环境搭建</summary>
    
    
    
    <category term="JAVA" scheme="https://bearwater.gitee.io/hexo/categories/JAVA/"/>
    
    
    <category term="中间件" scheme="https://bearwater.gitee.io/hexo/tags/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
  </entry>
  
</feed>
